{"data":{"site":{"siteMetadata":{"title":"Bruno Luiz Blog","author":"Bruno Luiz Silva"}},"markdownRemark":{"id":"d9b7a106-e314-56c8-b214-d15472a10f66","excerpt":"Today, Kubernetes is the de facto container orchestration solution. Together with the devops culture, developers have to get familiarised to its tools, such asâ€¦","html":"<p><img src=\"header.jpeg\" alt=\"Photo by Cameron Venti on Unsplash\"></p>\n<p>Today, Kubernetes is the de facto container orchestration solution. Together with the devops culture, developers have to get familiarised to its tools, such as kubectl.</p>\n<p>After some point though, using kubectl for everything can get quite verbose, specially if you use many namespaces and contexts. The following tips try to minimise the pain of doing operations solely through it, sometimes even using other tools besides it.</p>\n<h2>kubectx: context and namespaces management</h2>\n<p>The operations done in kubectl usually require two params: context and namespace. Any operation will result in something as <code>kubectl --context prod --namespace hello-world exec -it hello-world-app-0 sh</code>. For a one time operation, probably it is fine, but after some point it can get cumbersome. One way to avoid these long command strings is by using <code>kubectx</code>.</p>\n<h2>References</h2>\n<ul>\n<li>Header image: Photo by <a href=\"https://unsplash.com/photos/QtETdXXR7gs?utm_source=unsplash&#x26;utm_medium=referral&#x26;utm_content=creditCopyText\">Cameron Venti</a> on Unsplash</li>\n</ul>","frontmatter":{"title":"Making Kubernetes devops less painful","date":"March 18, 2019","cover":null}}},"pageContext":{"slug":"/2019/mar/kubernetes-productivity/","previous":{"fields":{"slug":"/2019/feb/a-guide-to-npm-package-publishing/"},"frontmatter":{"title":"A guide on npm package publishing"}},"next":null}}